"""Initial migration

Revision ID: dd2ae3703c81
Revises: 
Create Date: 2025-02-17 14:36:11.853311

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dd2ae3703c81'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('additional',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('additional_point', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('pass_secure', sa.String(length=255), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='unique_email_constraint'),
    sa.UniqueConstraint('username', name='unique_username_constraint')
    )
    with op.batch_alter_table('admin_user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_admin_user_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_admin_user_username'), ['username'], unique=False)

    op.create_table('asset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('class_name', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('asset_content', sa.Text(), nullable=False),
    sa.Column('asset', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('asset', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_asset_asset'), ['asset'], unique=False)
        batch_op.create_index(batch_op.f('ix_asset_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_asset_type'), ['type'], unique=False)

    op.create_table('benefit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('comparison', sa.Text(), nullable=False),
    sa.Column('benefit', sa.Text(), nullable=False),
    sa.Column('class_name', sa.Text(), nullable=True),
    sa.Column('top_class_name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('benefit', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_benefit_type'), ['type'], unique=False)

    op.create_table('choice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('choice', sa.Text(), nullable=False),
    sa.Column('rationale', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('class_name', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('content', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_content_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_content_type'), ['type'], unique=False)

    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('course_name', sa.String(length=255), nullable=False),
    sa.Column('introduction_message', sa.Text(), nullable=False),
    sa.Column('details', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_course_course_name'), ['course_name'], unique=False)

    op.create_table('courseprogress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_name', sa.String(length=255), nullable=False),
    sa.Column('is_complete', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('courseprogress', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_courseprogress_course_name'), ['course_name'], unique=False)

    op.create_table('evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quiz_name', sa.String(length=255), nullable=False),
    sa.Column('score', sa.String(length=255), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feature',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feature', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goal', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('importance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('importance', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inclusion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inclusion', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lesson',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lesson_name', sa.String(length=255), nullable=False),
    sa.Column('introduction', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('lesson', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lesson_lesson_name'), ['lesson_name'], unique=False)

    op.create_table('lessoncontent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lessonprogress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lesson_name', sa.String(length=255), nullable=False),
    sa.Column('is_complete', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('lessonprogress', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lessonprogress_lesson_name'), ['lesson_name'], unique=False)

    op.create_table('marking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('correct_answer', sa.Text(), nullable=False),
    sa.Column('student_answer', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('material',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('material', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('module',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('module', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_module_module_name'), ['module_name'], unique=False)

    op.create_table('moduleprogress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_name', sa.String(length=255), nullable=False),
    sa.Column('is_complete', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('moduleprogress', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_moduleprogress_module_name'), ['module_name'], unique=False)

    op.create_table('option',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subscription_duration', sa.String(length=255), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('ideal_audience', sa.Text(), nullable=False),
    sa.Column('class_name', sa.Text(), nullable=True),
    sa.Column('saving', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('option', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_option_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_option_subscription_duration'), ['subscription_duration'], unique=False)

    op.create_table('page',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('page', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_page_slug'), ['slug'], unique=False)
        batch_op.create_index(batch_op.f('ix_page_title'), ['title'], unique=False)

    op.create_table('plan',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subscription_duration', sa.String(length=255), nullable=False),
    sa.Column('module', sa.String(length=255), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('ideal_audience', sa.Text(), nullable=False),
    sa.Column('saving', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('plan', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_plan_subscription_duration'), ['subscription_duration'], unique=False)

    op.create_table('planentry',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subscription_duration', sa.String(length=255), nullable=False),
    sa.Column('module', sa.String(length=255), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('ideal_audience', sa.Text(), nullable=False),
    sa.Column('saving', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('planentry', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_planentry_subscription_duration'), ['subscription_duration'], unique=False)

    op.create_table('point',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('point', sa.Text(), nullable=False),
    sa.Column('explaination', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problem',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('explaination', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question_choice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('choice', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quiz_name', sa.String(length=255), nullable=False),
    sa.Column('quiz_details', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('quiz', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_quiz_quiz_name'), ['quiz_name'], unique=False)

    op.create_table('section',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('section_text', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('section', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_section_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_section_title'), ['title'], unique=False)

    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('topic', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_topic_topic_name'), ['topic_name'], unique=False)

    op.create_table('topicprogress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_name', sa.String(length=255), nullable=False),
    sa.Column('is_complete', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('topicprogress', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_topicprogress_topic_name'), ['topic_name'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('role', sa.Enum('Student', 'Tutor', 'Admin', 'SuperAdmin', name='user_role_enum'), nullable=False),
    sa.Column('pass_secure', sa.String(length=255), nullable=True),
    sa.Column('is_superadmin', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_tutor', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='unique_email_constraint'),
    sa.UniqueConstraint('username', name='unique_username_constraint')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=False)

    op.create_table('vocabulary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vocabulary', sa.Text(), nullable=False),
    sa.Column('explaination', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('benefits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('page_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('benefits', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_benefits_title'), ['title'], unique=False)

    op.create_table('billing',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subscription_start_date', sa.DateTime(), nullable=True),
    sa.Column('subscription_end_date', sa.DateTime(), nullable=True),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('city', sa.String(length=255), nullable=False),
    sa.Column('country', sa.String(length=255), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=False),
    sa.Column('payment_method', sa.Enum('PayPal', 'Credit Card', name='payment_method_enum'), nullable=False),
    sa.Column('coupon_code', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('billing', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_billing_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_billing_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_billing_coupon_code'), ['coupon_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_billing_payment_method'), ['payment_method'], unique=False)
        batch_op.create_index(batch_op.f('ix_billing_state'), ['state'], unique=False)

    op.create_table('content_material',
    sa.Column('lessoncontent_id', sa.Integer(), nullable=False),
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lessoncontent_id'], ['lessoncontent.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['material.id'], ),
    sa.PrimaryKeyConstraint('lessoncontent_id', 'material_id')
    )
    op.create_table('course_inclusion',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('inclusion_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['inclusion_id'], ['inclusion.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'inclusion_id')
    )
    op.create_table('course_module',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'module_id')
    )
    op.create_table('lesson_contents',
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('lessoncontent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.ForeignKeyConstraint(['lessoncontent_id'], ['lessoncontent.id'], ),
    sa.PrimaryKeyConstraint('lesson_id', 'lessoncontent_id')
    )
    op.create_table('lesson_goals',
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('goal_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['goal_id'], ['goal.id'], ),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.PrimaryKeyConstraint('lesson_id', 'goal_id')
    )
    op.create_table('lesson_importances',
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('importance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['importance_id'], ['importance.id'], ),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.PrimaryKeyConstraint('lesson_id', 'importance_id')
    )
    op.create_table('lesson_points',
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('point_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.ForeignKeyConstraint(['point_id'], ['point.id'], ),
    sa.PrimaryKeyConstraint('lesson_id', 'point_id')
    )
    op.create_table('lesson_problems',
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('problem_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.PrimaryKeyConstraint('lesson_id', 'problem_id')
    )
    op.create_table('lesson_vocabulary',
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('vocabulary_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.ForeignKeyConstraint(['vocabulary_id'], ['vocabulary.id'], ),
    sa.PrimaryKeyConstraint('lesson_id', 'vocabulary_id')
    )
    op.create_table('lessons_progress',
    sa.Column('topicprogress_id', sa.Integer(), nullable=False),
    sa.Column('lessonprogress_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lessonprogress_id'], ['lessonprogress.id'], ),
    sa.ForeignKeyConstraint(['topicprogress_id'], ['topicprogress.id'], ),
    sa.PrimaryKeyConstraint('topicprogress_id', 'lessonprogress_id')
    )
    op.create_table('module_topics',
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('module_id', 'topic_id')
    )
    op.create_table('modules_progress',
    sa.Column('courseprogress_id', sa.Integer(), nullable=False),
    sa.Column('moduleprogress_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['courseprogress_id'], ['courseprogress.id'], ),
    sa.ForeignKeyConstraint(['moduleprogress_id'], ['moduleprogress.id'], ),
    sa.PrimaryKeyConstraint('courseprogress_id', 'moduleprogress_id')
    )
    op.create_table('option_feature',
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['feature_id'], ['feature.id'], ),
    sa.ForeignKeyConstraint(['option_id'], ['option.id'], ),
    sa.PrimaryKeyConstraint('option_id', 'feature_id')
    )
    op.create_table('page_section',
    sa.Column('page_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['section.id'], ),
    sa.PrimaryKeyConstraint('page_id', 'section_id')
    )
    op.create_table('point_additionals',
    sa.Column('point_id', sa.Integer(), nullable=False),
    sa.Column('additional_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['additional_id'], ['additional.id'], ),
    sa.ForeignKeyConstraint(['point_id'], ['point.id'], ),
    sa.PrimaryKeyConstraint('point_id', 'additional_id')
    )
    op.create_table('pricing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('page_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pricing', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pricing_title'), ['title'], unique=False)

    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('answer_id', sa.Integer(), nullable=True),
    sa.Column('explaination', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['choice.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question_markings',
    sa.Column('evaluation_id', sa.Integer(), nullable=False),
    sa.Column('marking_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['evaluation_id'], ['evaluation.id'], ),
    sa.ForeignKeyConstraint(['marking_id'], ['marking.id'], ),
    sa.PrimaryKeyConstraint('evaluation_id', 'marking_id')
    )
    op.create_table('section_asset',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['section.id'], ),
    sa.PrimaryKeyConstraint('section_id', 'asset_id')
    )
    op.create_table('section_content',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['section.id'], ),
    sa.PrimaryKeyConstraint('section_id', 'content_id')
    )
    op.create_table('test_bank_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('difficulty', sa.String(length=50), nullable=False),
    sa.Column('topic', sa.String(length=100), nullable=False),
    sa.Column('rationale', sa.Text(), nullable=True),
    sa.Column('references', sa.Text(), nullable=True),
    sa.Column('answer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['answer_id'], ['question_choice.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic_lessons',
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('topic_id', 'lesson_id')
    )
    op.create_table('topic_quizzes',
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('topic_id', 'quiz_id')
    )
    op.create_table('topics_progress',
    sa.Column('moduleprogress_id', sa.Integer(), nullable=False),
    sa.Column('topicprogress_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['moduleprogress_id'], ['moduleprogress.id'], ),
    sa.ForeignKeyConstraint(['topicprogress_id'], ['topicprogress.id'], ),
    sa.PrimaryKeyConstraint('moduleprogress_id', 'topicprogress_id')
    )
    op.create_table('userprogress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('benefit_listing',
    sa.Column('benefits_id', sa.Integer(), nullable=False),
    sa.Column('benefit_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['benefit_id'], ['benefit.id'], ),
    sa.ForeignKeyConstraint(['benefits_id'], ['benefits.id'], ),
    sa.PrimaryKeyConstraint('benefits_id', 'benefit_id')
    )
    op.create_table('courses_progress',
    sa.Column('userprogress_id', sa.Integer(), nullable=False),
    sa.Column('courseprogress_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['courseprogress_id'], ['courseprogress.id'], ),
    sa.ForeignKeyConstraint(['userprogress_id'], ['userprogress.id'], ),
    sa.PrimaryKeyConstraint('userprogress_id', 'courseprogress_id')
    )
    op.create_table('page_benefits',
    sa.Column('page_id', sa.Integer(), nullable=False),
    sa.Column('benefits_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['benefits_id'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.PrimaryKeyConstraint('page_id', 'benefits_id')
    )
    op.create_table('page_pricing',
    sa.Column('page_id', sa.Integer(), nullable=False),
    sa.Column('pricing_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.ForeignKeyConstraint(['pricing_id'], ['pricing.id'], ),
    sa.PrimaryKeyConstraint('page_id', 'pricing_id')
    )
    op.create_table('pricing_option',
    sa.Column('pricing_id', sa.Integer(), nullable=False),
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['option_id'], ['option.id'], ),
    sa.ForeignKeyConstraint(['pricing_id'], ['pricing.id'], ),
    sa.PrimaryKeyConstraint('pricing_id', 'option_id')
    )
    op.create_table('question_choices',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('choice_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['choice_id'], ['choice.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('question_id', 'choice_id')
    )
    op.create_table('question_choices_bank',
    sa.Column('test_bank_question_id', sa.Integer(), nullable=False),
    sa.Column('question_choice_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_choice_id'], ['question_choice.id'], ),
    sa.ForeignKeyConstraint(['test_bank_question_id'], ['test_bank_question.id'], ),
    sa.PrimaryKeyConstraint('test_bank_question_id', 'question_choice_id')
    )
    op.create_table('quiz_evaluations',
    sa.Column('userprogress_id', sa.Integer(), nullable=False),
    sa.Column('evaluation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['evaluation_id'], ['evaluation.id'], ),
    sa.ForeignKeyConstraint(['userprogress_id'], ['userprogress.id'], ),
    sa.PrimaryKeyConstraint('userprogress_id', 'evaluation_id')
    )
    op.create_table('quiz_questions',
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], ),
    sa.PrimaryKeyConstraint('quiz_id', 'question_id')
    )
    op.create_table('subscription_module_plans',
    sa.Column('billing_id', sa.Integer(), nullable=False),
    sa.Column('planentry_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['billing_id'], ['billing.id'], ),
    sa.ForeignKeyConstraint(['planentry_id'], ['planentry.id'], ),
    sa.PrimaryKeyConstraint('billing_id', 'planentry_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscription_module_plans')
    op.drop_table('quiz_questions')
    op.drop_table('quiz_evaluations')
    op.drop_table('question_choices_bank')
    op.drop_table('question_choices')
    op.drop_table('pricing_option')
    op.drop_table('page_pricing')
    op.drop_table('page_benefits')
    op.drop_table('courses_progress')
    op.drop_table('benefit_listing')
    op.drop_table('userprogress')
    op.drop_table('topics_progress')
    op.drop_table('topic_quizzes')
    op.drop_table('topic_lessons')
    op.drop_table('test_bank_question')
    op.drop_table('section_content')
    op.drop_table('section_asset')
    op.drop_table('question_markings')
    op.drop_table('question')
    with op.batch_alter_table('pricing', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pricing_title'))

    op.drop_table('pricing')
    op.drop_table('point_additionals')
    op.drop_table('page_section')
    op.drop_table('option_feature')
    op.drop_table('modules_progress')
    op.drop_table('module_topics')
    op.drop_table('lessons_progress')
    op.drop_table('lesson_vocabulary')
    op.drop_table('lesson_problems')
    op.drop_table('lesson_points')
    op.drop_table('lesson_importances')
    op.drop_table('lesson_goals')
    op.drop_table('lesson_contents')
    op.drop_table('course_module')
    op.drop_table('course_inclusion')
    op.drop_table('content_material')
    with op.batch_alter_table('billing', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_billing_state'))
        batch_op.drop_index(batch_op.f('ix_billing_payment_method'))
        batch_op.drop_index(batch_op.f('ix_billing_coupon_code'))
        batch_op.drop_index(batch_op.f('ix_billing_country'))
        batch_op.drop_index(batch_op.f('ix_billing_city'))

    op.drop_table('billing')
    with op.batch_alter_table('benefits', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_benefits_title'))

    op.drop_table('benefits')
    op.drop_table('vocabulary')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_role'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('topicprogress', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_topicprogress_topic_name'))

    op.drop_table('topicprogress')
    with op.batch_alter_table('topic', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_topic_topic_name'))

    op.drop_table('topic')
    op.drop_table('tag')
    with op.batch_alter_table('section', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_section_title'))
        batch_op.drop_index(batch_op.f('ix_section_name'))

    op.drop_table('section')
    with op.batch_alter_table('quiz', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quiz_quiz_name'))

    op.drop_table('quiz')
    op.drop_table('question_choice')
    op.drop_table('problem')
    op.drop_table('point')
    with op.batch_alter_table('planentry', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_planentry_subscription_duration'))

    op.drop_table('planentry')
    with op.batch_alter_table('plan', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plan_subscription_duration'))

    op.drop_table('plan')
    with op.batch_alter_table('page', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_page_title'))
        batch_op.drop_index(batch_op.f('ix_page_slug'))

    op.drop_table('page')
    with op.batch_alter_table('option', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_option_subscription_duration'))
        batch_op.drop_index(batch_op.f('ix_option_action'))

    op.drop_table('option')
    with op.batch_alter_table('moduleprogress', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_moduleprogress_module_name'))

    op.drop_table('moduleprogress')
    with op.batch_alter_table('module', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_module_module_name'))

    op.drop_table('module')
    op.drop_table('material')
    op.drop_table('marking')
    with op.batch_alter_table('lessonprogress', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lessonprogress_lesson_name'))

    op.drop_table('lessonprogress')
    op.drop_table('lessoncontent')
    with op.batch_alter_table('lesson', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lesson_lesson_name'))

    op.drop_table('lesson')
    op.drop_table('inclusion')
    op.drop_table('importance')
    op.drop_table('goal')
    op.drop_table('feature')
    op.drop_table('evaluation')
    with op.batch_alter_table('courseprogress', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_courseprogress_course_name'))

    op.drop_table('courseprogress')
    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_course_course_name'))

    op.drop_table('course')
    with op.batch_alter_table('content', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_content_type'))
        batch_op.drop_index(batch_op.f('ix_content_title'))

    op.drop_table('content')
    op.drop_table('choice')
    with op.batch_alter_table('benefit', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_benefit_type'))

    op.drop_table('benefit')
    with op.batch_alter_table('asset', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_asset_type'))
        batch_op.drop_index(batch_op.f('ix_asset_title'))
        batch_op.drop_index(batch_op.f('ix_asset_asset'))

    op.drop_table('asset')
    with op.batch_alter_table('admin_user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_admin_user_username'))
        batch_op.drop_index(batch_op.f('ix_admin_user_email'))

    op.drop_table('admin_user')
    op.drop_table('additional')
    # ### end Alembic commands ###
